       PROGRAM    VTD_EXAMPLE_02_MAIN
       IMPLICIT   NONE 
       CHARACTER  STR*128
       INTEGER*8    STACK_SIZE_IN_BYTES, GB, IS
       PARAMETER  ( GB = 1024*1024*1024 )
       PARAMETER  ( STACK_SIZE_IN_BYTES = INT8(4) * GB )
       INTEGER*8, EXTERNAL :: SET_STACKSIZE 
!
! ---- Set stacksize. Alterntive is to set stacksize in shell:
! ---- commands limit stacksize 4000000 or limit -s 4000000
! ---- and set evironment variable GOMP_STACKSIZE
! ---- Program will crash in attempt to use default stacksize,
! ---- because fortran uses stack for storing variables
!
       IS = SET_STACKSIZE ( %VAL(STACK_SIZE_IN_BYTES) )
       CALL INCH8    ( STACK_SIZE_IN_BYTES/INT8(1024), STR )
       CALL SETENV   ( 'GOMP_STACKSIZE'//CHAR(0), TRIM(STR)//CHAR(0), %VAL(1) )
       CALL VTD_EXAMPLE_02()
       END  PROGRAM  VTD_EXAMPLE_02_MAIN
!
! ------------------------------------------------------------------------
!
       SUBROUTINE  VTD_EXAMPLE_02()
! ************************************************************************
! *                                                                      *
! *   Program VTD_EXAMPLE_02 is for computation of VLBI group delay from *
! *   the near zone object.
! *                                                                      *
! *  ### 04-AUG-2005 VTD_EXAMPLE_02  v2.0 (c) L. Petrov  15-JUN-2012 ### *
! *                                                                      *
! ************************************************************************
      IMPLICIT   NONE 
      INCLUDE   'vtd.i'
      TYPE     ( VTD__TYPE      ) :: VTD
      TYPE     ( VTD__OBS_TYPE  ) :: OBS_TYP
      CHARACTER  C_SOU(VTD__M_SOU)*8, C_STA(VTD__M_STA)*8, SOU_NAM*8, &
     &           STA_NAM(3)*8
      CHARACTER  VTD_CONF_FILE*128, DATE_OBS*30, DATE_BEG*21, DATE_END*21
      INTEGER*4  L_STA, L_SOU, MJD_BEG, MJD_END, MJD_OBS, J1, J2, IUER
      REAL*8     TEMP(3), PRES(3), TAI_OBS, TAI_BEG, TAI_END, TAU_GR, TAU_PH, &
     &           RATE_PH, DER_DEL(VTD__NDER), DER_RAT(VTD__NDER)
      REAL*8     FREQ, TAU_GR2
      INTEGER*4  MBUF 
      PARAMETER  ( MBUF = 8192 )
      CHARACTER  BUF(MBUF)*256, FILNZO*128, NZO_NAME*8, CENTER_NAME*16, &
     &                    REF_NAME*16
      INTEGER*4  M_ARR, L_ARR, L_NOD, L_DEG, TIM_CODE, COO_CODE, NZO_REF
      PARAMETER  ( M_ARR = 8192 )
      CHARACTER  MJDSEC_TO_DATE*23
      INTEGER*4  MJD_ARR(M_ARR)
      REAL*8     TIM_ARR(M_ARR), POS_ARR(3,M_ARR), VEL_ARR(3,M_ARR)
!
      VTD_CONF_FILE = '__VTD_SHARE__/vtd_test_02.cnf'
      FILNZO        = '__VTD_SHARE__/titan_apr.nzo'
!
      OBS_TYP%PLRZ    = 'RR'     
      OBS_TYP%FRQ_REF(1) = 2.2D9
      OBS_TYP%FRQ_REF(2) = 8.2D9
      OBS_TYP%N_BND      = 2
      OBS_TYP%DELAY_TYPE = VTD__MLMH__DTP 
      OBS_TYP%FRQ_ION_EFF(1) = 2.3D9
      OBS_TYP%FRQ_ION_EFF(2) = 8.5D9
      OBS_TYP%EXP_NAME   = 'Test'
      OBS_TYP%SCAN_NAME  = 'Scan_0001'
      OBS_TYP%STATUS     = VTD__BND 
!
! --- List of stations and sources participated in the observing session
!
      L_STA = 5
      C_STA(2) = 'BR-VLBA '
      C_STA(3) = 'MK-VLBA '
      C_STA(4) = 'KP-VLBA '
      C_STA(1) = 'GBT-VLBA'
      C_STA(5) = 'GEOCENTR'
!
      L_SOU = 240
      DO 410 J1=1,L_SOU
         C_SOU(J1) = 'S_000000'
         CALL INCH   ( J1, C_SOU(J1)(3:8) )
         CALL CHASHR (     C_SOU(J1)(3:8) )
         CALL BLANK_TO_ZERO ( C_SOU(J1) )
 410  CONTINUE 
!
! --- Date range of the observing session
!
      DATE_BEG   = '2005.01.14-06:00:00'
      DATE_END   = '2005.01.14-18:00:00'
!
! --- Transform the dates from calendar dates to pairs MJD/TAI
!
      IUER = -1
      CALL DATE_TO_TIME ( DATE_BEG, MJD_BEG, TAI_BEG, IUER )
      IF ( IUER .NE. 0 ) THEN
           CALL ERR_LOG ( 3721, -2, 'VTD_EXAMPLE_02', 'Error in date '// &
     &         'transformation. Please check the syntax of '//DATE_BEG )
           CALL EXIT ( 1 ) 
      END IF
!
      IUER = -1
      CALL DATE_TO_TIME ( DATE_END, MJD_END, TAI_END, IUER )
      IF ( IUER .NE. 0 ) THEN
           CALL ERR_LOG ( 3722, -2, 'VTD_EXAMPLE_02', 'Error in date '// &
     &         'transformation. Please check the syntax of '//DATE_END )
           CALL EXIT ( 1 ) 
      END IF
!
      IUER = -1
      CALL VTD_INIT ( VTD,  IUER )
      IF ( IUER .NE. 0 ) THEN
           CALL ERR_LOG ( 3723, -2, 'VTD_EXAMPLE_02', 'Error in an attempt to '// &
     &         'initialize VTD oibject' )
           CALL EXIT ( 1 ) 
      END IF
!
! --- Read and parse configuration file
!
      IUER = -1
      CALL VTD_CONF ( VTD_CONF_FILE, VTD, IUER )
      IF ( IUER .NE. 0 ) THEN
           CALL ERR_LOG ( 3724, -2, 'VTD_EXAMPLE_02', 'Error in an attempt '// &
     &         'to read configuration file '//VTD_CONF_FILE )
           CALL EXIT ( 1 ) 
      END IF
!
! --- Load catalogues, ephemerides, EOP series and other data files
!
      IUER = -1
      CALL VTD_LOAD  ( VTD, L_STA, C_STA, L_SOU, C_SOU, MJD_BEG, TAI_BEG, &
     &                 MJD_END, TAI_END, IUER )
      IF ( IUER .NE. 0 ) THEN
           CALL ERR_LOG ( 3725, -2, 'VTD_EXAMPLE_02', 'Error in an '// &
     &         'attempt to load the data into VTD data structure' )
           CALL EXIT ( 1 ) 
      END IF
!
      IUER = -1
      CALL VTD_READ_NZO ( FILNZO, NZO_NAME, M_ARR, L_ARR, MJD_ARR, &
     &                    TIM_ARR, POS_ARR, VEL_ARR, CENTER_NAME, &
     &                    REF_NAME, TIM_CODE, COO_CODE, IUER )
      IF ( IUER .NE. 0 ) THEN
           CALL ERR_LOG ( 3726, -2, 'VTD_EXAMPLE_02', 'Error in an '// &
     &         'attempt to read NZO data into VTD data structure' )
           CALL EXIT ( 1 ) 
      END IF
!
      WRITE ( 6, * ) ' L_ARR = ', L_ARR, ' NZO_NAME = ', NZO_NAME
      L_NOD = 8
      L_DEG = 3
      IUER = -1
      CALL VTD_LOAD_OBJ_NZO ( NZO_NAME, VTD__SS, VTD__GR, NZO_REF, TIM_CODE, &
     &                        VTD, L_ARR, MJD_ARR, TIM_ARR, POS_ARR, L_NOD, &
     &                        L_DEG, IUER )
      IF ( IUER .NE. 0 ) THEN
           CALL ERR_LOG ( 3727, -2, 'VTD_EXAMPLE_02', 'Error in an '// &
     &         'attempt to load NZO data into VTD data structure' )
           CALL EXIT ( 1 ) 
      END IF
!
      DATE_OBS = '2005.01.14_09:30:00.0000000000'
      CALL DATE_TO_TIME ( DATE_OBS, MJD_BEG, TAI_BEG, IUER )
      DO 420 J2=1,L_SOU
!
! ------ Circumstances of the observation
!
         MJD_OBS = MJD_BEG
         TAI_OBS = TAI_BEG + (J2-1)*60.0D0
!
! ------ Meteorological parameter for station 1 and station 2
!
         PRES(1) = 101300.0D0  ! Pa
         TEMP(1) =    273.15D0 ! K
         PRES(2) =      0.D0   ! PA
         TEMP(2) =      0.D0   ! K
!
! ------ Load meteorological parameters of the first station into the VTD record
!
         IUER = -1 
         CALL VTD_METEO_IN ( VTD, C_STA(1), PRES(1), TEMP(1), TEMP(1), IUER )
         IF ( IUER .NE. 0 ) THEN
              CALL ERR_LOG ( 3728, -2, 'VTD_EXAMPLE_02', 'Error in an '// &
     &            'attempt to load meteorological parameters for station '// &
     &             STA_NAM(1) )
              CALL EXIT ( 1 ) 
         END IF
!
! ------ Load meteorological parameters of the first station into the VTD record
!
         IUER = -1 
         CALL VTD_METEO_IN ( VTD, C_STA(5), PRES(2), TEMP(2), TEMP(2), IUER )
         IF ( IUER .NE. 0 ) THEN
              CALL ERR_LOG ( 3729, -2, 'VTD_EXAMPLE_02', 'Error in an '// &
     &            'attempt to load meteorological parameters for station '// &
     &             STA_NAM(2) )
              CALL EXIT ( 1 ) 
         END IF
!
         VTD%CONF%IVRB = 0
         IUER = -1 
         CALL VTD_DELAY ( C_SOU(J2), C_STA(1), C_STA(5) , MJD_OBS, TAI_OBS, &
     &                    OBS_TYP, VTD, TAU_GR, RATE_PH, DER_DEL, &
     &                    DER_RAT, IUER )
         IF ( IUER .NE. 0 ) THEN
              CALL ERR_LOG ( 3730, -2, 'VTD_EXAMPLE_02', 'Error in an '// &
     &            'attempt to compute VLBI time delay' )
              CALL EXIT ( 1 ) 
         END IF
!
! ------ Print results
!
         WRITE ( 6, 110 ) C_SOU(J2), C_STA(1), C_STA(5), &
     &                    MJDSEC_TO_DATE ( MJD_OBS, TAI_OBS, -2 ), TAU_GR*1.D12
 110     FORMAT ( 'Sou: ',A, ' Sta: ', A, ' / ', A, ' TAI: ', A, &
     &            ' Delay: ', F13.1, ' ps' )
 420  CONTINUE 
      END  SUBROUTINE  VTD_EXAMPLE_02  !#!#
