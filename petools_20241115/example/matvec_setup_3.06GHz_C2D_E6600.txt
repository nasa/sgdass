!
! --- Parameters below define boundary dimensions when one algorithm of
! --- basic matric-vector algebra runs faster than another. These parameters 
! --- were obtained for the best performance of the 
! --- Intel Core Duo processor E6600
! --- You can use these parameters for any machine without substantial 
! --- degradation of performance, although this may not be the optimal choice.
!
      DB__DP_VV_V      =   32 
      DB__ADD_RCT      =   64 
      DB__MUL_MM_II_I  =   24
      DB__MUL_MM_IT_I  =   24 
      DB__MUL_MM_TI_I  =   24 
      DB__MUL_MM_TT_I  =   24 
!
      DB1__MUL_MM_II_S =   64
      DB2__MUL_MM_II_S =  129 
      DB3__MUL_MM_II_S =  128 
!
      DB1__MUL_MM_IT_S =    7
      DB2__MUL_MM_IT_S =  129
      DB3__MUL_MM_IT_S =  128
!
      DB1__MUL_MM_TI_S =    7
      DB2__MUL_MM_TI_S =  129
      DB3__MUL_MM_TI_S =  128
!
      DB1__MUL_MM_SI_I =    8
      DB2__MUL_MM_SI_I = 2048
      DB3__MUL_MM_SI_I = 2048
!
      DB1__MUL_MM_ST_I =    7
      DB2__MUL_MM_ST_I = 2048
      DB3__MUL_MM_ST_I = 2048
!
      DB1__MUL_MM_IS_I =   32
      DB2__MUL_MM_IS_I = 2048 
      DB3__MUL_MM_IS_I = 2048 
!
      DB1__MUL_MM_TS_I =   32 
      DB2__MUL_MM_TS_I = 2048
      DB3__MUL_MM_TS_I = 2048
!
      DB1__MUL_MM_SS_I =   64
      DB2__MUL_MM_SS_I = 1024
      DB3__MUL_MM_SS_I = 1024
!
      DB1__MUL_MM_SS_S =   16
      DB2__MUL_MM_SS_S =  129
      DB3__MUL_MM_SS_S =  128
!
      DB1__MUL_MV_SV_V =   32
!
! --- DB__INVMAT_DIR -- maximal dimension for using direct highly optimized
! --- routine for matrix inversion (NB: cannot be greater than DB__INVMAT_MAX)
!
      DB__INVMAT_DIR   =   32
!
! --- Minimal dimension for which a recursion of matrix inversion is stopped
! --- and direct optimized routines for algebraic operations are used 
! --- (NB: 
! ----     1) cannot be greater than DB__INVMAT_MAX, 
! ----     2) changes in this constant requires uncommenting lines in source
! ----        code of $MK5_ROOT/libs/matvec/invs_recursive.f
!
      DB__INVMAT_MIN   =    4
!
      DB__DPPSL        =   64 
!
! --- Peak speed of matrix-matrix multiplication in Mflops 
! --- (need for adjustment of testing software only)
!
      MFLOP__PEAK  = 7000.0
